// var date = ee.Date.parse("dd/MM/yyyy", '15/04/2000')

// print(date)
// print(date.format("yyyy-MM-dd"))


var tableparam = ee.FeatureCollection("users/NDFIb1/Param_mosaicos_no_Raisg_cartas_L2_Peru_v1")
                   .map(dateformat)
                  .getInfo().features;

print(tableparam)

var nimage = tableparam.map(function(feas){
    var collectionIds= 
                {
                'L4': [
                    'LANDSAT/LT04/C02/T1_L2'
                ],
                'L5': [
                    'LANDSAT/LT05/C02/T1_L2'
                ],
                'L7': [
                    'LANDSAT/LE07/C02/T1_L2'
                ],
                'L8': [
                    'LANDSAT/LC08/C02/T1_L2'
                ],
                'LX': [
                    'LANDSAT/LT05/C02/T1_L2',
                    'LANDSAT/LE07/C02/T1_L2'
                ],
            };
      var grid =  ee.FeatureCollection('projects/mapbiomas-raisg/DATOS_AUXILIARES/VECTORES/grid-world')
        .filterMetadata('name', 'equals', feas.properties.GRID_NAME);
      

      var filters = ee.Filter.and(
          ee.Filter.bounds(grid),
          ee.Filter.date(feas.properties.t0, feas.properties.t1),
          ee.Filter.lte('CLOUD_COVER',   feas.properties.CLOUD_COVER)
      );
      var filters2 = ee.Filter.and(
          ee.Filter.bounds(grid),
          ee.Filter.date(feas.properties.t0, feas.properties.t1),
          ee.Filter.lt('CLOUD_COVER',   feas.properties.CLOUD_COVER)
      );
      var idsensor = collectionIds[feas.properties.SATELLITE];
      
      // ENVIO 1
          var collection = ee.ImageCollection(idsensor[0])
                          .filter(filters);
                          
          // Unmask data with the secondary mosaic (+L5 or +L7)
          if (idsensor.length == 2) {
              var collection2 = ee.ImageCollection(idsensor[1])
                                  .filter(filters);
                          
    
              collection = collection.merge(collection2);
          }
      
      // ENVIO 2
          var collection3 = ee.ImageCollection(idsensor[0])
                          .filter(filters2);
                          
          // Unmask data with the secondary mosaic (+L5 or +L7)
          if (idsensor.length == 2) {
              var collection4 = ee.ImageCollection(idsensor[1])
                                  .filter(filters2);
                          
    
              collection3 = collection3.merge(collection4);
          }
    
      var sizeImages1 = collection.size()
      var sizeImages2 = collection3.size()
      
      var featureC = ee.Feature(null).set('BLACKLIST',feas.properties.BLACKLIST)
                                    .set('CALIDAD',feas.properties.CALIDAD)
                                    .set('CLOUD_COVER',feas.properties.CLOUD_COVER)
                                    .set('CLOUD_THRESH',feas.properties.CLOUD_THRESH)
                                    .set('COUNTRY',feas.properties.COUNTRY)
                                    .set('ENVIO',feas.properties.ENVIO)
                                    .set('ESTADO',feas.properties.ESTADO)
                                    .set('GRID_NAME',feas.properties.GRID_NAME)
                                    .set('OBS',feas.properties.OBS)
                                    .set('PROCESS',feas.properties.PROCESS)
                                    .set('REGION_CODE',feas.properties.REGION_CODE)
                                    .set('REGION_NAME',feas.properties.REGION_NAME)
                                    .set('SATELLITE',feas.properties.SATELLITE)
                                    .set('SHADOWSUM',feas.properties.SHADOWSUM)
                                    .set('T0_P',feas.properties.T0_P)
                                    .set('T0_S',feas.properties.T0_S)
                                    .set('T1_P',feas.properties.T1_P)
                                    .set('T1_S',feas.properties.T1_S)
                                    .set('YEAR',feas.properties.YEAR)
                                    .set('t0',feas.properties.t0)
                                    .set('t1',feas.properties.t1)

      
    return featureC.set('nimage1', sizeImages1)
                   .set('nimage2', sizeImages2)
})

// print(nimage)

var featurcoll = ee.FeatureCollection(nimage)
print(featurcoll.size())


Export.table.toDrive({
  collection: featurcoll, 
  description: 'Param_mosaicos_no_Raisg_cartas_L2_Peru_Nimage', 
  fileNamePrefix: 'Param_mosaicos_no_Raisg_cartas_L2_Peru_Nimage', 
})

  

function dateformat(fea){
  
  var T0_P = ee.Date.parse("dd/MM/yyyy",fea.get('T0_P')) 
  var T1_P = ee.Date.parse("dd/MM/yyyy",fea.get('T1_P')) 
  
  return fea.set('t0', T0_P.format("yyyy-MM-dd"))
            .set('t1', T1_P.format("yyyy-MM-dd"))
}
