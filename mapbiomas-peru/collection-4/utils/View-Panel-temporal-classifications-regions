var param = {
    'code_region': [70105,70104],
    'country': 'PERU',
    'paso': 'CF', // CO: CLASIFICACION ORIGINAL,  CF: Clasificacion con filtros
    'version_input': 3,
};

var palettes = require('users/mapbiomas/modules:Palettes.js');

var result 
if (param.paso == 'CO'){
    result = 'projects/mapbiomas-raisg/COLECCION4/clasificacion';
} else {
    result = 'projects/mapbiomas-raisg/COLECCION4/clasificacion-ft';
}

var regionesclass = 'projects/mapbiomas-raisg/DATOS_AUXILIARES/VECTORES/clasificacion-regiones-4';


var years = [ 1985, 1986, 1987, 1988, 1989,1990, 
              1991, 1992, 1993, 1994, 1995, 1996, 
              1997, 1998, 1999, 2000, 2001, 2002, 
              2003, 2004, 2005, 2006, 2007, 2008, 
              2009, 2010, 2011, 2012, 2013, 2014, 
              2015, 2016, 2017, 2018, 2019, 2020, 
              2021
              ];


// var asset = "projects/mapbiomas-raisg/COLECCION2/P01_Mosaicos/mosaicos-c2";

var regionclas = ee.FeatureCollection(regionesclass)
                   .filter(ee.Filter.inList('id_regionC', param.code_region));
                  //.filterMetadata('id_regionC', 'equals', param.code_region);
// print(regionclas)

var collection 
if (param.paso == 'CO'){
    collection = ee.ImageCollection(result)
                .filter(ee.Filter.inList('code_region', param.code_region))
                // .filterMetadata('code_region', 'equals', param.code_region)
                .filterMetadata('version', 'equals', param.version_input)
} else {
    collection = ee.ImageCollection(result)
                .filter(ee.Filter.neq('descripcion', 'gapfill metadata'))
                .filter(ee.Filter.inList('code_region', param.code_region))
                // .filterMetadata('code_region', 'equals', param.code_region)
                .filterMetadata('version', 'equals', param.version_input)
}
 print(collection)

var maps = [],
    map,
    mosaic; 

for (var i = 0; i < years.length; i++) {

    mosaic = collection.mosaic().select('classification_'+ String(years[i]));

    map = ui.Map();

    map.add(ui.Label(String(years[i]), {
        'position': 'bottom-left',
        'fontWeight': 'bold'
    }));

    map.addLayer(mosaic, {
    "bands": 'classification_'+ String(years[i]), //classification
    "min": 0,
    "max": 34,
    "palette": "ffffff,129912,1f4423,006400,00ff00,687537,76a5af,29eee4,77a605,"+
    "935132,bbfcac,45c2a5,b8af4f,f1c232,ffffb2,ffd966,f6b26b,f99f40,"+
    "e974ed,d5a6bd,c27ba0,fff3bf,ea9999,dd7e6b,aa0000,ff99ff,0000ff,"+
    "d5d5e5,dd497f,b2ae7c,af2a2a,8a2be2,968c46,0000ff,4fd3ff",
        "format": "png"
}, years[i]+'a');

    map.addLayer(regionclas, {
            'palette': 'cccccc',
            'opacity': 0.6
        },
        'regiones',false
    );

    maps.push(map);
}

// blank map
maps.push(ui.Map());

var linker = ui.Map.Linker(maps);

// Create a title.
var title = ui.Label('Clasificacion of Collection 4 - Mapbiomas Amazonia-'+param.code_region, {
    stretch: 'horizontal',
    textAlign: 'center',
    fontWeight: 'bold',
    fontSize: '24px',

});

// Create a grid of maps.
var mapGrid = ui.Panel([
    ui.Panel([maps[0], maps[1], maps[2], maps[3], maps[4], maps[5], maps[6]],
            ui.Panel.Layout.Flow('horizontal'), {
                stretch: 'both'
            }),
    ui.Panel([maps[7], maps[8], maps[9], maps[10], maps[11], maps[12], maps[13]],
            ui.Panel.Layout.Flow('horizontal'), {
                stretch: 'both'
            }),
    ui.Panel([maps[14], maps[15], maps[16], maps[17], maps[18], maps[19], maps[20]],
            ui.Panel.Layout.Flow('horizontal'), {
                stretch: 'both'
            }),
    ui.Panel([maps[21], maps[22], maps[23], maps[24], maps[25], maps[26], maps[27]],
            ui.Panel.Layout.Flow('horizontal'), {
                stretch: 'both'
            }),
    ui.Panel([maps[28], maps[29], maps[30], maps[31], maps[32], maps[33], maps[34]],
            ui.Panel.Layout.Flow('horizontal'), {
                stretch: 'both'
            }),
    ui.Panel([maps[35], maps[36]],
            ui.Panel.Layout.Flow('horizontal'), {
                stretch: 'both'
            }),
  ],
    ui.Panel.Layout.Flow('vertical'), {
        stretch: 'both'
    }
);

// Add the maps and title to the ui.root.
ui.root.widgets().reset([title, mapGrid]);
ui.root.setLayout(ui.Panel.Layout.Flow('vertical'));

maps[0].centerObject(regionclas,8);
