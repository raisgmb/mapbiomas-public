/**
 * Visualizar mosaicos col4
 * by: EYTC
*/
// var listCountry = [
//                     'BOLIVIA',
//                     'COLOMBIA',
//                     'ECUADOR',
//                     'GUIANA_FRANCESA',
//                     'GUYANA',
//                     // 'PERU',
//                     'SURINAME',
//                     'VENEZUELA',
//                     ]
// for(var cont = 0; cont <= listCountry.length; cont ++){
//Muestras Export para CSV

var years = [
    1985, 
    // 1986, 1987, 1988, 1989, 
    1990, 
    // 1991, 1992, 1993, 1994, 
    1995, 
    // 1996, 1997, 1998, 1999, 
    2000,
    // 2001, 2002, 2003, 2004,
    2005, 
    // 2006, 2007, 2008, 2009, 
    2010, 
    // 2011, 2012, 2013, 2014, 
    2015, 
    // 2016, 2017, 2018, 2019,
    2020,
    //2021, 2022
    ];
    
var assetMosaic = "projects/nexgenmap/MapBiomas2/LANDSAT/PANAMAZON/mosaics-2";
// var assetMosaicP2 = "projects/mapbiomas-raisg/MOSAICOS/mosaics-2";
var assetMosaicP2 = "projects/nexgenmap/MapBiomas2/LANDSAT/PANAMAZON/mosaics-pathrow-2";
var assetRegionVector = 'projects/mapbiomas-raisg/DATOS_AUXILIARES/VECTORES/clasificacion-regiones-4';
var assetRegionMosaicRaster = 'projects/mapbiomas-raisg/DATOS_AUXILIARES/RASTERS/mosaico-regiones-4';

var regionMosaicRaster  = ee.Image(assetRegionMosaicRaster).rename(['regions'])
var regionesclasif = ee.FeatureCollection(assetRegionVector)
// print(regionMosaicRaster)
// Map.addLayer(regionMosaicRaster.randomVisualizer())
  /**
  * Get mosaics
  * Get mosaics from collection2 asset. Then compute
  * wetlands indexes remaining.
  */
var getMosaic = function(paths, regionRaster, Listyears) {
  
      // Mosaic
      regionRaster = regionRaster.where(regionRaster.eq(211),210)
      regionRaster = regionRaster.where(regionRaster.eq(205),210)
      var Mosaic_coll = ee.ImageCollection(paths[0]).merge(ee.ImageCollection(paths[1]))
                                                    .filter(ee.Filter.inList('year',Listyears))
                        // .filterMetadata('country', 'equals', param.pais)
                        // .select(['swir1_median', 'nir_median', 'red_median'])
                        .map(
                            function (image) {
                                return image.updateMask(
                                    regionRaster.eq(ee.Number.parse(image.get('region_code')).toInt16()));
                            }
                        );
                        
                          

      // Aditional Bands
      var joinedMosaics = Mosaic_coll;
                  
      
      // Select variables
      return joinedMosaics;
      
  };

var mosaicsRAISG = getMosaic([assetMosaic,assetMosaicP2], regionMosaicRaster, years);

for (var ii=0; ii< years.length; ii++){
      var year = years[ii]
      var mosaicYear = mosaicsRAISG
                  .filterMetadata('year', 'equals', year)
                  .mosaic();

      Map.addLayer(mosaicYear,{
        "bands":["swir1_median","nir_median","red_median"],
        "min":407,"max":3381}, 'Mosaic' + year,false)
  
    }

Map.addLayer(regionesclasif,{},'clasificacion-regiones-4',false)

